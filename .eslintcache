[{"E:\\Machstatz\\taskofmachstatz\\src\\index.js":"1","E:\\Machstatz\\taskofmachstatz\\src\\App.js":"2","E:\\Machstatz\\taskofmachstatz\\src\\componets\\Planet.js":"3","E:\\Machstatz\\taskofmachstatz\\src\\componets\\Home.js":"4","E:\\Machstatz\\taskofmachstatz\\src\\componets\\Favorite.js":"5","E:\\Machstatz\\taskofmachstatz\\src\\componets\\Contexpage.js":"6"},{"size":432,"mtime":1608718157514,"results":"7","hashOfConfig":"8"},{"size":285,"mtime":1608754938292,"results":"9","hashOfConfig":"8"},{"size":7540,"mtime":1608801590858,"results":"10","hashOfConfig":"8"},{"size":1129,"mtime":1608788904697,"results":"11","hashOfConfig":"8"},{"size":6390,"mtime":1608800939635,"results":"12","hashOfConfig":"8"},{"size":88,"mtime":1608746303694,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11vfq8b",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"E:\\Machstatz\\taskofmachstatz\\src\\index.js",[],"E:\\Machstatz\\taskofmachstatz\\src\\App.js",[],"E:\\Machstatz\\taskofmachstatz\\src\\componets\\Planet.js",["28","29","30","31"],"import axios from 'axios'\r\nimport React from 'react'\r\nimport {dataContext} from './Contexpage'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\n//importing images from image file\r\nimport ceres from '../images/cares.jpg';\r\nimport earth from '../images/earth.jpg';\r\nimport eris from '../images/eris.jpg';\r\nimport haumea from '../images/haumea.jpg';\r\nimport jupiter from '../images/jupiter.jpg';\r\nimport makemake from '../images/makemake.jpg';\r\nimport mars from '../images/mars.png';\r\nimport mercury from '../images/mercury.jpg';\r\nimport pluto from '../images/pluto.png';\r\nimport saturn from '../images/saturn.jpg';\r\nimport venus from '../images/venus.jpg';\r\n\r\n\r\n// importing useEffect hook , useState, useContext\r\nconst {useState, useEffect,useContext } = React\r\n\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent:'space-evenly',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      flexWrap: 'wrap',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n      transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n      color: theme.palette.secondary.light,\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n\r\n  }));\r\n  \r\n\r\nconst Planet = ()=> {\r\n    const favoriteData = useContext(dataContext)\r\n\r\n    const classes = useStyles()\r\n    const {newdata,setnewdata} = useContext(dataContext)\r\n    // console.log(newdata,\"cccc\",favoriteData.newdata.planetStore);\r\n\r\n    const [planetDetails, setplanetDetails] = useState(null)\r\n    const initialState = {\r\n        ceres:ceres,\r\n        earth:earth,\r\n        eris:eris,\r\n        haumea:haumea,\r\n        jupiter:jupiter,\r\n        makemake:makemake,\r\n        mars:mars,\r\n        mercury:mercury,\r\n        pluto:pluto,\r\n        saturn:saturn,\r\n        venus:venus\r\n\r\n    }\r\n    const [drawerActivate, setdrawerActivate] = useState(false)\r\n    const [imagesSet, setimagesSet] = useState(initialState)\r\n    const [favirateClick, setfavirateClick] = useState({idStore:[],returnPlanet:[]})\r\n\r\n\r\n    //Doing API requests using axios third party module \r\n    useEffect(()=>{\r\n        // console.log(favoriteData.newdata.planetStore,\"u\");\r\n         axios.get('https://assignment-machstatz.herokuapp.com/planet')\r\n        .then(res=>\r\n            favoriteData.newdata.planetStore.length >=1 ?\r\n            // setplanetDetails(null):\r\n            setplanetDetails(favoriteData.newdata.planetStore):setplanetDetails(res.data)\r\n            )\r\n        .catch(err=>console.log(err))\r\n\r\n\r\n\r\n        if (window.innerWidth <= 600) {\r\n            console.log(window.innerWidth);\r\n            setdrawerActivate(true);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth <= 600) {\r\n                setdrawerActivate(true);\r\n            }\r\n            else {\r\n                setdrawerActivate(false);\r\n            }\r\n        });\r\n        setfavirateClick({...favirateClick,idStore:favoriteData.newdata.returnToHome,\r\n            returnPlanet:favoriteData.newdata.returnToplanetData})\r\n        if(favoriteData.newdata.planetStore.length>=1){\r\n            setplanetDetails(favoriteData.newdata.planetStore)\r\n        }\r\n        console.log(planetDetails,favoriteData.newdata.planetStore,\"eeeee\");\r\n        // setnewdata({...newdata,planetStore:favoriteData.newdata.returnToplanetData,favoriteStore:favirateClick.idStore})\r\n\r\n    },[])\r\n    // console.log(planetDetails,\"o\");\r\n\r\n    useEffect(()=>{\r\n        setnewdata({...newdata,favoriteStore:favirateClick.idStore,planetStore:planetDetails})\r\n        if(favirateClick.returnPlanet.length>=1){\r\n            setnewdata({...newdata,planetStore:favirateClick.returnPlanet,favoriteStore:favirateClick.idStore})\r\n        }\r\n    },[favirateClick])\r\n  \r\n    if(planetDetails) {\r\n        for (var property in imagesSet) {\r\n            for(var eachItem of planetDetails){\r\n                if(eachItem.id === property){\r\n                    eachItem[\"image\"] =imagesSet[property]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleFavirate =(id)=>{\r\n        console.log(planetDetails,\"hhhh\",id);\r\n\r\n        for (let each of planetDetails){\r\n            // if(each.id===id){\r\n                if(each.isFavourite !== true){\r\n                    if(each.id === id){\r\n                        each.isFavourite=true\r\n                    }\r\n                }\r\n            // }\r\n        }\r\n\r\n        setplanetDetails(planetDetails)\r\n        if(favirateClick.idStore.includes(id)){\r\n            const newidStore = favirateClick.idStore.filter(planet=>planet !== id)\r\n            setfavirateClick({...favirateClick,idStore:newidStore})\r\n            for (let each of planetDetails){\r\n                if(each.id===id && !newidStore.includes(id)){\r\n                    each.isFavourite=false\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            setfavirateClick({...favirateClick,idStore:[...favirateClick.idStore,id]})  \r\n        }\r\n           setnewdata({...newdata,planetStore:favirateClick.returnPlanet})\r\n        console.log(favirateClick,planetDetails,\"second\")\r\n    }\r\n    // console.log(planetDetails)\r\n    // console.log(favirateClick,\"f\",planetDetails)\r\n\r\n// saloni@iesl.co\r\n    return (\r\n        <div  className={classes.root}>\r\n\r\n        {/* <Container maxWidth=\"md\"> */}\r\n            {/* <Grid item xs={6}> */}\r\n        <GridList className={classes.gridList} cellHeight={drawerActivate ? 180:350}  cols={drawerActivate ? 2:3}>\r\n            {planetDetails ? planetDetails.map((tile) => (\r\n            <GridListTile key={tile.id} className=\"imagehover\">\r\n                <img src={tile.image} alt={tile.id}  />\r\n                <GridListTileBar\r\n                title={tile.name}\r\n                classes={{\r\n                    root: classes.titleBar,\r\n                    title: classes.title,\r\n                }}\r\n                actionIcon={\r\n                    <IconButton aria-label={`star ${tile.name}`} onClick={()=>handleFavirate(tile.id)} >\r\n\r\n                    {favoriteData.newdata.returnToHome ? \r\n                    favoriteData.newdata.returnToHome.includes(tile.id) ? <FavoriteIcon className={classes.title} />:\r\n                    \r\n                    tile.isFavourite && favirateClick.idStore.includes(tile.id) ? \r\n                    <FavoriteIcon className={classes.title} /> :\r\n                    <FavoriteBorderIcon className={classes.title} />\r\n                    : tile.isFavourite && favirateClick.idStore.includes(tile.id) ? \r\n                    <FavoriteIcon className={classes.title} /> :\r\n                    <FavoriteBorderIcon className={classes.title} />\r\n                }   \r\n                    </IconButton>\r\n                }\r\n                />\r\n                </GridListTile>\r\n            )):null}\r\n        </GridList>\r\n        {/* </Grid> */}\r\n        {/* </Container> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Planet;","E:\\Machstatz\\taskofmachstatz\\src\\componets\\Home.js",[],"E:\\Machstatz\\taskofmachstatz\\src\\componets\\Favorite.js",["32","33","34","35"],"E:\\Machstatz\\taskofmachstatz\\src\\componets\\Contexpage.js",[],["36","37"],{"ruleId":"38","severity":1,"message":"39","line":9,"column":8,"nodeType":"40","messageId":"41","endLine":9,"endColumn":17},{"ruleId":"38","severity":1,"message":"42","line":79,"column":23,"nodeType":"40","messageId":"41","endLine":79,"endColumn":35},{"ruleId":"43","severity":1,"message":"44","line":117,"column":7,"nodeType":"45","endLine":117,"endColumn":9,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":125,"column":7,"nodeType":"45","endLine":125,"endColumn":22,"suggestions":"48"},{"ruleId":"38","severity":1,"message":"39","line":11,"column":8,"nodeType":"40","messageId":"41","endLine":11,"endColumn":17},{"ruleId":"38","severity":1,"message":"42","line":73,"column":23,"nodeType":"40","messageId":"41","endLine":73,"endColumn":35},{"ruleId":"43","severity":1,"message":"49","line":100,"column":6,"nodeType":"45","endLine":100,"endColumn":8,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"51","line":103,"column":3,"nodeType":"45","endLine":103,"endColumn":18,"suggestions":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'setimagesSet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'favirateClick', 'favoriteData.newdata.planetStore', 'favoriteData.newdata.returnToHome', 'favoriteData.newdata.returnToplanetData', and 'planetDetails'. Either include them or remove the dependency array. You can also do a functional update 'setfavirateClick(f => ...)' if you only need 'favirateClick' in the 'setfavirateClick' call.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'newdata', 'planetDetails', and 'setnewdata'. Either include them or remove the dependency array.",["58"],"React Hook React.useEffect has missing dependencies: 'favirateClick', 'favoriteData.newdata.favoriteStore', 'favoriteData.newdata.planetStore', 'newdata', and 'setnewdata'. Either include them or remove the dependency array. You can also do a functional update 'setfavirateClick(f => ...)' if you only need 'favirateClick' in the 'setfavirateClick' call.",["59"],"React Hook React.useEffect has missing dependencies: 'newdata' and 'setnewdata'. Either include them or remove the dependency array.",["60"],"no-native-reassign",["61"],"no-negated-in-lhs",["62"],{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [favirateClick, favoriteData.newdata.planetStore, favoriteData.newdata.returnToHome, favoriteData.newdata.returnToplanetData, planetDetails]",{"range":"71","text":"72"},"Update the dependencies array to be: [favirateClick, newdata, planetDetails, setnewdata]",{"range":"73","text":"74"},"Update the dependencies array to be: [favirateClick, favoriteData.newdata.favoriteStore, favoriteData.newdata.planetStore, newdata, setnewdata]",{"range":"75","text":"76"},"Update the dependencies array to be: [favirateClick, newdata, setnewdata]",{"range":"77","text":"78"},[4018,4020],"[favirateClick, favoriteData.newdata.planetStore, favoriteData.newdata.returnToHome, favoriteData.newdata.returnToplanetData, planetDetails]",[4363,4378],"[favirateClick, newdata, planetDetails, setnewdata]",[3309,3311],"[favirateClick, favoriteData.newdata.favoriteStore, favoriteData.newdata.planetStore, newdata, setnewdata]",[3451,3466],"[favirateClick, newdata, setnewdata]"]